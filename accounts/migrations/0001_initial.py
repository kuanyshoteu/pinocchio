# Generated by Django 2.2.5 on 2019-11-07 10:36

import accounts.models
import datetime
from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('schools', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CRMCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('phone', models.CharField(max_length=250)),
                ('extra_phone', models.CharField(default='', max_length=250)),
                ('mail', models.CharField(max_length=250)),
                ('comments', models.CharField(max_length=250)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('saved', models.BooleanField(default=False)),
                ('was_called', models.BooleanField(default=False)),
                ('last_groups', models.IntegerField(default=-1)),
                ('days_of_weeks', django.contrib.postgres.fields.ArrayField(base_field=models.BooleanField(), default=list, size=None)),
                ('action', models.CharField(default='', max_length=250)),
                ('premoney', models.IntegerField(default=0)),
                ('colour', models.CharField(default='white', max_length=250)),
            ],
            options={
                'ordering': ['saved', '-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, default='', null=True)),
                ('salary', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, default='', null=True)),
            ],
            options={
                'ordering': ['-title'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.TextField(blank=True, default='name', null=True)),
                ('money', models.IntegerField(default=0)),
                ('salary', models.IntegerField(default=0)),
                ('is_student', models.BooleanField(default=True)),
                ('coins', models.IntegerField(default=0)),
                ('mail', models.TextField(blank=True, default='', null=True)),
                ('phone', models.TextField(blank=True, default='', null=True)),
                ('extra_phone', models.TextField(blank=True, default='', null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=accounts.models.upload_location)),
                ('crm_age_connect', models.ManyToManyField(default=1, related_name='students', to='schools.SubjectAge')),
                ('crm_level_connect', models.ManyToManyField(default=2, related_name='students', to='schools.SubjectLevel')),
                ('crm_subject_connect', models.ManyToManyField(default=1, related_name='students', to='schools.SubjectCategory')),
            ],
            options={
                'ordering': ['id', '-coins', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confirmed', models.BooleanField(default=False)),
                ('confirmation_code', models.CharField(default='', max_length=250)),
                ('confirmation_time', models.DateTimeField(default=datetime.datetime(2000, 1, 1, 0, 0))),
                ('tag_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('easy_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('middle_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('hard_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('pro_skills', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=list, size=None)),
                ('crm_show_free_cards', models.BooleanField(default=True)),
                ('need_actions', models.IntegerField(default=0)),
                ('notifications_number', models.IntegerField(default=0)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('crm_age', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choosed_by', to='schools.SubjectAge')),
                ('crm_age2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choosed_by2', to='schools.SubjectAge')),
                ('crm_cabinet', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choosed_by', to='schools.Cabinet')),
                ('crm_office', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choosed_by', to='schools.Office')),
                ('crm_office2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choosed_by2', to='schools.Office')),
                ('crm_subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choosed_by', to='schools.SubjectCategory')),
                ('crm_subject2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='choosed_by2', to='schools.SubjectCategory')),
                ('interested_subjects', models.ManyToManyField(default=1, related_name='interested_students', to='schools.SubjectCategory')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=400)),
                ('rating', models.IntegerField(default=0, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='accounts.Profile')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='schools.School')),
                ('to_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_reviews', to='accounts.Profile')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='filter_teacher_connect',
            field=models.ManyToManyField(related_name='filter_teacher', to='accounts.Skill'),
        ),
        migrations.AddField(
            model_name='profile',
            name='job_categories',
            field=models.ManyToManyField(related_name='job_workers', to='accounts.JobCategory'),
        ),
        migrations.AddField(
            model_name='profile',
            name='profession',
            field=models.ManyToManyField(related_name='workers', to='accounts.Profession'),
        ),
        migrations.AddField(
            model_name='profile',
            name='schools',
            field=models.ManyToManyField(related_name='people', to='schools.School'),
        ),
        migrations.AddField(
            model_name='profile',
            name='skill',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='accounts.Skill'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='')),
                ('itstype', models.CharField(max_length=25)),
                ('url', models.TextField(default='', null=True)),
                ('image_url', models.TextField(default='')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('author_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='made_notifications', to='accounts.Profile')),
                ('profession', models.ManyToManyField(related_name='notifications', to='accounts.Profession')),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='schools.School')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='MissLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, default='', null=True)),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=accounts.models.upload_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0, null=True)),
                ('width_field', models.IntegerField(default=0, null=True)),
                ('dates', django.contrib.postgres.fields.ArrayField(base_field=models.DateField(blank=True, null=True), default=list, size=None)),
                ('profile', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.Profile')),
            ],
        ),
        migrations.AddField(
            model_name='jobcategory',
            name='profession',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='job_categories', to='accounts.Profession'),
        ),
        migrations.AddField(
            model_name='jobcategory',
            name='schools',
            field=models.ManyToManyField(related_name='job_categories', to='schools.School'),
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('schools', models.ManyToManyField(related_name='hashtags', to='schools.School')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='CRMColumn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('schools', models.ManyToManyField(related_name='crm_columns', to='schools.School')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CRMCardHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('oldcolumn', models.CharField(max_length=250)),
                ('newcolumn', models.CharField(max_length=250)),
                ('edit', models.TextField(default='')),
                ('action_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_histories', to='accounts.Profile')),
                ('card', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='history', to='accounts.CRMCard')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='crmcard',
            name='author_profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card_author', to='accounts.Profile'),
        ),
        migrations.AddField(
            model_name='crmcard',
            name='card_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='card', to='accounts.Profile'),
        ),
        migrations.AddField(
            model_name='crmcard',
            name='column',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='accounts.CRMColumn'),
        ),
        migrations.AddField(
            model_name='crmcard',
            name='hashtags',
            field=models.ManyToManyField(related_name='cards', to='accounts.Hashtag'),
        ),
        migrations.AddField(
            model_name='crmcard',
            name='school',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crm_cards', to='schools.School'),
        ),
    ]
