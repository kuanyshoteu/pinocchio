# Generated by Django 2.0.1 on 2019-02-02 03:14

from django.db import migrations, models
import django.db.models.deletion
import todolist.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0023_auto_20190127_0915'),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(allow_unicode=True)),
                ('description', models.TextField(blank=True, default='', null=True)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='columns', to='todolist.Board')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, height_field='height_field', null=True, upload_to=todolist.models.upload_location, width_field='width_field')),
                ('height_field', models.IntegerField(default=0, null=True)),
                ('width_field', models.IntegerField(default=0, null=True)),
                ('author_profile', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='comments', to='accounts.Profile')),
                ('card', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='todolist.Card')),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to=todolist.models.upload_location)),
            ],
        ),
        migrations.CreateModel(
            name='Metka',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='ffile',
            field=models.ManyToManyField(related_name='ffile', to='todolist.Document'),
        ),
        migrations.AddField(
            model_name='card',
            name='column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cards', to='todolist.Column'),
        ),
        migrations.AddField(
            model_name='card',
            name='doc_list',
            field=models.ManyToManyField(related_name='cards', to='todolist.Document'),
        ),
        migrations.AddField(
            model_name='card',
            name='metka_list',
            field=models.ManyToManyField(related_name='cards', to='todolist.Metka'),
        ),
        migrations.AddField(
            model_name='card',
            name='user_list',
            field=models.ManyToManyField(related_name='cards', to='accounts.Profile'),
        ),
    ]
